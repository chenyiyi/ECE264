==33287== Memcheck, a memory error detector
==33287== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==33287== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==33287== Command: ./a.out images/corrupt-testcases/09-incomplete-image.ee264 student-out-23_-
==33287== Parent PID: 33286
==33287== 
--33287-- 
--33287-- Valgrind options:
--33287--    --tool=memcheck
--33287--    --leak-check=full
--33287--    --verbose
--33287--    --log-file=memcheck-23.log
--33287-- Contents of /proc/version:
--33287--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--33287-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--33287-- Page sizes: currently 4096, max supported 4096
--33287-- Valgrind library directory: /usr/lib64/valgrind
--33287-- Reading syms from /tmp/.wIzGhP/a.out
--33287-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--33287--    object doesn't have a dynamic symbol table
--33287-- Reading syms from /lib64/ld-2.12.so
--33287--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--33287--   .. build-id is valid
--33287-- Scheduler: using generic scheduler lock implementation.
--33287-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==33287== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-33287-by-chen1234-on-ecegrid-thin4.ecn.purdue.edu
==33287== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-33287-by-chen1234-on-ecegrid-thin4.ecn.purdue.edu
==33287== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-33287-by-chen1234-on-ecegrid-thin4.ecn.purdue.edu
==33287== 
==33287== TO CONTROL THIS PROCESS USING vgdb (which you probably
==33287== don't want to do, unless you know exactly what you're doing,
==33287== or are doing some strange experiment):
==33287==   /usr/lib64/valgrind/../../bin/vgdb --pid=33287 ...command...
==33287== 
==33287== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==33287==   /path/to/gdb ./a.out
==33287== and then give GDB the following command
==33287==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=33287
==33287== --pid is optional if only one valgrind process is running
==33287== 
--33287-- REDIR: 0x3350217610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--33287-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--33287-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--33287-- REDIR: 0x3350217480 (index) redirected to 0x4a07c30 (index)
--33287-- REDIR: 0x3350217500 (strcmp) redirected to 0x4a08570 (strcmp)
--33287-- Reading syms from /lib64/libc-2.12.so
--33287--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--33287--   .. build-id is valid
--33287-- REDIR: 0x3350684cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--33287-- REDIR: 0x3350686f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--33287-- REDIR: 0x3350682c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--33287-- REDIR: 0x335067f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--33287-- REDIR: 0x3350728420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--33287-- REDIR: 0x3350681120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--33287-- REDIR: 0x33507336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--33287-- REDIR: 0x335068aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--33287-- REDIR: 0x3350684500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--33287-- REDIR: 0x335067b520 (free) redirected to 0x4a063a9 (free)
--33287-- REDIR: 0x335067a640 (malloc) redirected to 0x4a069ac (malloc)
--33287-- REDIR: 0x3350689670 (memcpy) redirected to 0x4a08b60 (memcpy)
==33287== Conditional jump or move depends on uninitialised value(s)
==33287==    at 0x400BB5: Image_load (answer07.c:64)
==33287==    by 0x401C14: main (<stdin>:61)
==33287== 
==33287== 
==33287== HEAP SUMMARY:
==33287==     in use at exit: 0 bytes in 0 blocks
==33287==   total heap usage: 4 allocs, 4 frees, 1,396 bytes allocated
==33287== 
==33287== All heap blocks were freed -- no leaks are possible
==33287== 
==33287== Use --track-origins=yes to see where uninitialised values come from
==33287== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==33287== 
==33287== 1 errors in context 1 of 1:
==33287== Conditional jump or move depends on uninitialised value(s)
==33287==    at 0x400BB5: Image_load (answer07.c:64)
==33287==    by 0x401C14: main (<stdin>:61)
==33287== 
--33287-- 
--33287-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--33287-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==33287== 
==33287== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
